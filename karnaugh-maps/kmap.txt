Type: F
Title: KM1-1
1. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 1, 4, 7, 9, 10, 12], and let F(N) be 1 when N is any of [3, 5, 13, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B&C|~B&C&D|B&~C&D
b. A&B&C|B&~C&D|~B&C&D
c. ~B&C&D|A&B&C|B&~C&D
d. ~B&C&D|B&~C&D|A&B&C
e. B&~C&D|A&B&C|~B&C&D
f. B&~C&D|~B&C&D|A&B&C


Type: F
Title: KM1-2
2. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 3, 4, 5, 7, 10, 13], and let F(N) be 1 when N is any of [0, 6, 9, 11, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&~C|B&C&~D|A&~B&D
b. ~B&~C|A&~B&D|B&C&~D
c. B&C&~D|~B&~C|A&~B&D
d. B&C&~D|A&~B&D|~B&~C
e. A&~B&D|~B&~C|B&C&~D
f. A&~B&D|B&C&~D|~B&~C


Type: F
Title: KM1-3
3. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 3, 5, 6, 7, 12], and let F(N) be 1 when N is any of [4, 10, 11, 13, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&C|~A&~C&~D|A&D
b. A&C|A&D|~A&~C&~D
c. ~A&~C&~D|A&C|A&D
d. ~A&~C&~D|A&D|A&C
e. A&D|A&C|~A&~C&~D
f. A&D|~A&~C&~D|A&C


Type: F
Title: KM1-4
4. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 2, 3, 4, 9, 11], and let F(N) be 1 when N is any of [0, 5, 10, 13, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&~C&~D|B&D|A&~D
b. ~B&~C&~D|A&~D|B&D
c. B&D|~B&~C&~D|A&~D
d. B&D|A&~D|~B&~C&~D
e. A&~D|~B&~C&~D|B&D
f. A&~D|B&D|~B&~C&~D


Type: F
Title: KM1-5
5. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 1, 6, 9, 12, 13, 14], and let F(N) be 1 when N is any of [3, 5, 8, 11]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&~B&~D|C&D|~A&B&D
b. A&~B&~D|~A&B&D|C&D
c. C&D|A&~B&~D|~A&B&D
d. C&D|~A&B&D|A&~B&~D
e. ~A&B&D|A&~B&~D|C&D
f. ~A&B&D|C&D|A&~B&~D


Type: F
Title: KM1-6
6. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 8, 9, 12, 15], and let F(N) be 1 when N is any of [0, 2, 3, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&C|C&~D|~A&~D
b. ~B&C|~A&~D|C&~D
c. C&~D|~B&C|~A&~D
d. C&~D|~A&~D|~B&C
e. ~A&~D|~B&C|C&~D
f. ~A&~D|C&~D|~B&C


Type: F
Title: KM1-7
7. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [3, 6, 7, 9, 10, 14], and let F(N) be 1 when N is any of [0, 1, 4, 11, 12, 13, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~C|A&C&D|B&~C
b. ~A&~C|B&~C|A&C&D
c. A&C&D|~A&~C|B&~C
d. A&C&D|B&~C|~A&~C
e. B&~C|~A&~C|A&C&D
f. B&~C|A&C&D|~A&~C


Type: F
Title: KM1-8
8. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 4, 9, 10, 13, 15], and let F(N) be 1 when N is any of [2, 5, 6, 7, 12]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B&~D|~A&C|~A&B&D
b. A&B&~D|~A&B&D|~A&C
c. ~A&C|A&B&~D|~A&B&D
d. ~A&C|~A&B&D|A&B&~D
e. ~A&B&D|A&B&~D|~A&C
f. ~A&B&D|~A&C|A&B&~D


Type: F
Title: KM1-9
9. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 1, 6, 7, 10, 11, 12], and let F(N) be 1 when N is any of [2, 3, 8, 9, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~B&C|A&B&C|A&~B&~C
b. ~A&~B&C|A&~B&~C|A&B&C
c. A&B&C|~A&~B&C|A&~B&~C
d. A&B&C|A&~B&~C|~A&~B&C
e. A&~B&~C|~A&~B&C|A&B&C
f. A&~B&~C|A&B&C|~A&~B&C


Type: F
Title: KM1-10
10. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 9, 13, 14], and let F(N) be 1 when N is any of [0, 2, 4, 5, 11]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~D|~A&B|~B&C
b. ~A&~D|~B&C|~A&B
c. ~A&B|~A&~D|~B&C
d. ~A&B|~B&C|~A&~D
e. ~B&C|~A&~D|~A&B
f. ~B&C|~A&B|~A&~D


Type: F
Title: KM1-11
11. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 5, 9, 13], and let F(N) be 1 when N is any of [1, 3, 6, 11, 12, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. C&D|B&~D|~A&~B&D
b. C&D|~A&~B&D|B&~D
c. B&~D|C&D|~A&~B&D
d. B&~D|~A&~B&D|C&D
e. ~A&~B&D|C&D|B&~D
f. ~A&~B&D|B&~D|C&D


Type: F
Title: KM1-12
12. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 5, 6, 7, 9], and let F(N) be 1 when N is any of [0, 1, 3, 8, 10, 12]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&~D|~C&~D|~A&~B&D
b. A&~D|~A&~B&D|~C&~D
c. ~C&~D|A&~D|~A&~B&D
d. ~C&~D|~A&~B&D|A&~D
e. ~A&~B&D|A&~D|~C&~D
f. ~A&~B&D|~C&~D|A&~D


Type: F
Title: KM1-13
13. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [5, 7, 9, 10, 12, 13, 14], and let F(N) be 1 when N is any of [1, 4, 11, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~D|A&C&D|~A&~B
b. ~A&~D|~A&~B|A&C&D
c. A&C&D|~A&~D|~A&~B
d. A&C&D|~A&~B|~A&~D
e. ~A&~B|~A&~D|A&C&D
f. ~A&~B|A&C&D|~A&~D


Type: F
Title: KM1-14
14. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 4, 6, 11, 12, 13], and let F(N) be 1 when N is any of [1, 9, 10, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&~C|A&B&C|A&C&~D
b. ~B&~C|A&C&~D|A&B&C
c. A&B&C|~B&~C|A&C&~D
d. A&B&C|A&C&~D|~B&~C
e. A&C&~D|~B&~C|A&B&C
f. A&C&~D|A&B&C|~B&~C


Type: F
Title: KM1-15
15. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 4, 7, 12, 13], and let F(N) be 1 when N is any of [2, 3, 5, 11, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&C|~A&B&~C&D|~B&C
b. A&C|~B&C|~A&B&~C&D
c. ~A&B&~C&D|A&C|~B&C
d. ~A&B&~C&D|~B&C|A&C
e. ~B&C|A&C|~A&B&~C&D
f. ~B&C|~A&B&~C&D|A&C


Type: F
Title: KM1-16
16. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 4, 13, 15], and let F(N) be 1 when N is any of [0, 7, 9, 11]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&C|A&~B|~B&~D
b. ~A&C|~B&~D|A&~B
c. A&~B|~A&C|~B&~D
d. A&~B|~B&~D|~A&C
e. ~B&~D|~A&C|A&~B
f. ~B&~D|A&~B|~A&C


Type: F
Title: KM1-17
17. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 3, 4, 5, 9, 11], and let F(N) be 1 when N is any of [0, 6, 7, 10, 12, 13, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B|B&C|~B&~D
b. A&B|~B&~D|B&C
c. B&C|A&B|~B&~D
d. B&C|~B&~D|A&B
e. ~B&~D|A&B|B&C
f. ~B&~D|B&C|A&B


Type: F
Title: KM1-18
18. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 4, 5, 7, 11, 12], and let F(N) be 1 when N is any of [1, 3, 10, 13, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. C&~D|A&B&D|~A&~B&D
b. C&~D|~A&~B&D|A&B&D
c. A&B&D|C&~D|~A&~B&D
d. A&B&D|~A&~B&D|C&~D
e. ~A&~B&D|C&~D|A&B&D
f. ~A&~B&D|A&B&D|C&~D


Type: F
Title: KM1-19
19. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 6, 7, 10], and let F(N) be 1 when N is any of [2, 3, 4, 5, 9, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~B&C|A&D|B&~C
b. ~A&~B&C|B&~C|A&D
c. A&D|~A&~B&C|B&~C
d. A&D|B&~C|~A&~B&C
e. B&~C|~A&~B&C|A&D
f. B&~C|A&D|~A&~B&C


Type: F
Title: KM1-20
20. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 5, 9, 14], and let F(N) be 1 when N is any of [1, 3, 10, 11, 13]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&~B&C|A&B&D|~A&~B&D
b. A&~B&C|~A&~B&D|A&B&D
c. A&B&D|A&~B&C|~A&~B&D
d. A&B&D|~A&~B&D|A&~B&C
e. ~A&~B&D|A&~B&C|A&B&D
f. ~A&~B&D|A&B&D|A&~B&C


Type: F
Title: KM1-21
21. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 4, 6, 7, 12, 13], and let F(N) be 1 when N is any of [2, 8, 9, 11, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&C|A&~B|~B&C
b. A&C|~B&C|A&~B
c. A&~B|A&C|~B&C
d. A&~B|~B&C|A&C
e. ~B&C|A&C|A&~B
f. ~B&C|A&~B|A&C


Type: F
Title: KM1-22
22. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [6, 8, 9, 10, 12, 13], and let F(N) be 1 when N is any of [0, 3, 4, 7, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~C|A&B&C|C&D
b. ~A&~C|C&D|A&B&C
c. A&B&C|~A&~C|C&D
d. A&B&C|C&D|~A&~C
e. C&D|~A&~C|A&B&C
f. C&D|A&B&C|~A&~C


Type: F
Title: KM1-23
23. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 2, 7, 11, 15], and let F(N) be 1 when N is any of [3, 6, 10, 12, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~B&C&D|B&~D|A&~D
b. ~A&~B&C&D|A&~D|B&~D
c. B&~D|~A&~B&C&D|A&~D
d. B&~D|A&~D|~A&~B&C&D
e. A&~D|~A&~B&C&D|B&~D
f. A&~D|B&~D|~A&~B&C&D


Type: F
Title: KM1-24
24. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 4, 11, 12, 15], and let F(N) be 1 when N is any of [1, 5, 7, 9, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&D|B&C&~D|~C&D
b. ~A&D|~C&D|B&C&~D
c. B&C&~D|~A&D|~C&D
d. B&C&~D|~C&D|~A&D
e. ~C&D|~A&D|B&C&~D
f. ~C&D|B&C&~D|~A&D


Type: F
Title: KM1-25
25. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 4, 6, 7, 12], and let F(N) be 1 when N is any of [2, 9, 11, 13, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&C|A&D|~B&C
b. A&C|~B&C|A&D
c. A&D|A&C|~B&C
d. A&D|~B&C|A&C
e. ~B&C|A&C|A&D
f. ~B&C|A&D|A&C


Type: F
Title: KM1-26
26. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 5, 8, 11, 12, 13], and let F(N) be 1 when N is any of [1, 2, 3, 6, 7, 10, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. C&~D|B&C|~A&~B&D
b. C&~D|~A&~B&D|B&C
c. B&C|C&~D|~A&~B&D
d. B&C|~A&~B&D|C&~D
e. ~A&~B&D|C&~D|B&C
f. ~A&~B&D|B&C|C&~D


Type: F
Title: KM1-27
27. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [8, 10, 11, 13, 15], and let F(N) be 1 when N is any of [0, 2, 4, 7, 9, 12]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&~C&D|B&~D|~A
b. ~B&~C&D|~A|B&~D
c. B&~D|~B&~C&D|~A
d. B&~D|~A|~B&~C&D
e. ~A|~B&~C&D|B&~D
f. ~A|B&~D|~B&~C&D


Type: F
Title: KM1-28
28. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [5, 6, 7, 9], and let F(N) be 1 when N is any of [0, 1, 11, 12, 13, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B|~A&~B|A&C
b. A&B|A&C|~A&~B
c. ~A&~B|A&B|A&C
d. ~A&~B|A&C|A&B
e. A&C|A&B|~A&~B
f. A&C|~A&~B|A&B


Type: F
Title: KM1-29
29. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 3, 6, 7, 8, 9, 14], and let F(N) be 1 when N is any of [0, 1, 4, 5, 11, 12, 13]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&~C|A&C&D|B&~C
b. ~A&~C|B&~C|A&C&D
c. A&C&D|~A&~C|B&~C
d. A&C&D|B&~C|~A&~C
e. B&~C|~A&~C|A&C&D
f. B&~C|A&C&D|~A&~C


Type: F
Title: KM1-30
30. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 1, 3, 7, 11, 12, 13], and let F(N) be 1 when N is any of [2, 5, 10, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. C&~D|A&B&C|~A&B&~C
b. C&~D|~A&B&~C|A&B&C
c. A&B&C|C&~D|~A&B&~C
d. A&B&C|~A&B&~C|C&~D
e. ~A&B&~C|C&~D|A&B&C
f. ~A&B&~C|A&B&C|C&~D


Type: F
Title: KM1-31
31. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [1, 2, 8, 12, 13, 14, 15], and let F(N) be 1 when N is any of [0, 3, 4, 6, 7]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~A&B|~A&C&D|~A&~C&~D
b. ~A&B|~A&~C&~D|~A&C&D
c. ~A&C&D|~A&B|~A&~C&~D
d. ~A&C&D|~A&~C&~D|~A&B
e. ~A&~C&~D|~A&B|~A&C&D
f. ~A&~C&~D|~A&C&D|~A&B


Type: F
Title: KM1-32
32. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 4, 6, 10], and let F(N) be 1 when N is any of [0, 3, 5, 7, 8, 9, 12]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&~C|D|A&~C
b. ~B&~C|A&~C|D
c. D|~B&~C|A&~C
d. D|A&~C|~B&~C
e. A&~C|~B&~C|D
f. A&~C|D|~B&~C


Type: F
Title: KM1-33
33. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 7, 9, 13, 15], and let F(N) be 1 when N is any of [3, 4, 5, 8, 10, 12]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~B&C|A&~D|~A&B&~C
b. ~B&C|~A&B&~C|A&~D
c. A&~D|~B&C|~A&B&~C
d. A&~D|~A&B&~C|~B&C
e. ~A&B&~C|~B&C|A&~D
f. ~A&B&~C|A&~D|~B&C


Type: F
Title: KM1-34
34. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [2, 3, 6, 15], and let F(N) be 1 when N is any of [0, 7, 9, 10, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. ~C|A&~D|~A&B&D
b. ~C|~A&B&D|A&~D
c. A&~D|~C|~A&B&D
d. A&~D|~A&B&D|~C
e. ~A&B&D|~C|A&~D
f. ~A&B&D|A&~D|~C


Type: F
Title: KM1-35
35. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 5, 6, 8, 9, 11, 15], and let F(N) be 1 when N is any of [4, 12, 13, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B&~D|B&~C&~D|A&B&~C
b. A&B&~D|A&B&~C|B&~C&~D
c. B&~C&~D|A&B&~D|A&B&~C
d. B&~C&~D|A&B&~C|A&B&~D
e. A&B&~C|A&B&~D|B&~C&~D
f. A&B&~C|B&~C&~D|A&B&~D


Type: F
Title: KM1-36
36. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 1, 3, 5, 11], and let F(N) be 1 when N is any of [2, 4, 6, 9, 10, 14]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. C&~D|B&~D|A&~C
b. C&~D|A&~C|B&~D
c. B&~D|C&~D|A&~C
d. B&~D|A&~C|C&~D
e. A&~C|C&~D|B&~D
f. A&~C|B&~D|C&~D


Type: F
Title: KM1-37
37. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 1, 4, 5, 7, 11], and let F(N) be 1 when N is any of [6, 8, 9, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B|C&~D|A&~C
b. A&B|A&~C|C&~D
c. C&~D|A&B|A&~C
d. C&~D|A&~C|A&B
e. A&~C|A&B|C&~D
f. A&~C|C&~D|A&B


Type: F
Title: KM1-38
38. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 3, 4, 5, 10, 13, 15], and let F(N) be 1 when N is any of [6, 9, 11, 12]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&B&~D|A&~B&D|B&C&~D
b. A&B&~D|B&C&~D|A&~B&D
c. A&~B&D|A&B&~D|B&C&~D
d. A&~B&D|B&C&~D|A&B&~D
e. B&C&~D|A&B&~D|A&~B&D
f. B&C&~D|A&~B&D|A&B&~D


Type: F
Title: KM1-39
39. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 2, 4, 5, 6, 7, 13], and let F(N) be 1 when N is any of [9, 12, 14, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&C|A&~D|~B&D
b. A&C|~B&D|A&~D
c. A&~D|A&C|~B&D
d. A&~D|~B&D|A&C
e. ~B&D|A&C|A&~D
f. ~B&D|A&~D|A&C


Type: F
Title: KM1-40
40. Consider a function F with 4 1-bit inputs A, B, C, and D. We can treat those 4 bits as a number N in the range 0-15 (inclusive), where A is the most significant bit and D is the least significant bit.[html]<br/>[/html]
Let F(N) be 0 when N is any of [0, 2, 4, 9, 12, 14], and let F(N) be 1 when N is any of [6, 8, 10, 15]. In all other cases, we don't care what the value of F is.[html]<br/>[/html]
Create a truth table and Karnaugh map for the function F and give the minimal sum-of-products formula. You may put your products in any order, but the terms within each product must be alphabetized and you should not use parentheses. For example, you could write "A&~B|C" or "C|A&~B" but not "~B&A|C".

a. A&~B&~D|C&D|~A&B&C
b. A&~B&~D|~A&B&C|C&D
c. C&D|A&~B&~D|~A&B&C
d. C&D|~A&B&C|A&~B&~D
e. ~A&B&C|A&~B&~D|C&D
f. ~A&B&C|C&D|A&~B&~D
